abline(v=180, col="grey")
abline(v=v, col="blue")
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 11, height = 4)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,-0.4))#
graphics.off()#
}#
}
#caseBC<-"BestConfiguration"#
#
#Worst configuration#
#caseWC<-"WorstConfiguration"#
#return(c(fileBC, fileWC, caseBC, caseWC))#
#}#
#setwd(originalDirectory)#
#setwd(file.path(originalDataFolder , "Attack"))#
#caseBC <-list.files(getwd(),full.names = F, pattern="^[Best]")#
#caseWC <-list.files(getwd(),full.names = F, pattern="^[Worst]")#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#
#setwd(originalDirectory)#
#setwd(file.path(originalDataFolder , "NoAttack"))#
#caseBC <-list.files(getwd(),full.names = F, pattern="^[Best]")#
#caseWC <-list.files(getwd(),full.names = F, pattern="^[Worst]")#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 11, height = 4)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 2.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,-0.4))#
graphics.off()#
}#
}
##Split output dataset of Benchflow into datasets each for one performance measure. For each dataset and each microservice, it plots the time series over time  #
#Author: Barbara Russo, 2019#
library(stringr)#
#
# Dataset analysed#
# Best configuration:#
# without attack #
# Configuration: memoria 0.5 CPU 0.25 Replica 2 100 users#
#
# with attack #
# Configuration: memoria 1 CPU 0.25 Replica 2 100 users#
#
# Worst configuration:#
# without attack #
# Configuration: memoria 1 CPU 0.25 Replica 1 100 users#
#
# with attack #
# Configuration: memoria 1 CPU 0.5 Replica 4 100 users#
#
###
#
#clean console variables#
rm(list=ls())#
#
#change the wd if needed#
setwd("~/Research/Dropbox/OverleafGit/Microservices/SingleExperimentAnalysis")#
originalDirectory<-getwd()#
folders<-list.files(path= originalDirectory)#
#
#set up the folders for saving the output#
originalDataFolder<-subset(folders, folders=="OriginalData" )#
setwd(file.path(originalDataFolder , "Attack"))#
fileNamesA<-str_remove(list.files(getwd(),full.names = F ), ".txt")#
#
setwd(originalDirectory)#
setwd(file.path(originalDataFolder , "NoAttack"))#
fileNamesNA<-str_remove(list.files(getwd(),full.names = F ), ".txt")#
analysisFolder<-subset(folders, folders=="Analysis" )#
setwd(originalDirectory)#
setwd(file.path(analysisFolder,"NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)#
setwd(originalDirectory)#
setwd(file.path(analysisFolder,"Attack"))#
dir.create(fileNamesA[1], showWarnings=F)#
dir.create(fileNamesA[2], showWarnings=F)#
setwd(originalDirectory)#
datasetsFolder<-subset(folders, folders=="Datasets" )#
setwd(file.path(datasetsFolder,"NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)#
setwd(originalDirectory)#
setwd(file.path(datasetsFolder,"Attack"))#
dir.create(fileNamesA[1], showWarnings=F)#
dir.create(fileNamesA[2], showWarnings=F)#
setwd(originalDirectory)#
#
#with no attack. Uncomment the line  for the different case (Attack or no Attack) #
fileFolderNA<-"NoAttack" #
fileFolderA<-"Attack"#
#
getwd()#
#
#Select the original dataset for the best or worst configuration#
#setConfigurations<-function(dir){#
#Best configuration#
#
#caseBC<-"BestConfiguration"#
#
#Worst configuration#
#caseWC<-"WorstConfiguration"#
#return(c(fileBC, fileWC, caseBC, caseWC))#
#}#
#setwd(originalDirectory)#
#setwd(file.path(originalDataFolder , "Attack"))#
#caseBC <-list.files(getwd(),full.names = F, pattern="^[Best]")#
#caseWC <-list.files(getwd(),full.names = F, pattern="^[Worst]")#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#
#setwd(originalDirectory)#
#setwd(file.path(originalDataFolder , "NoAttack"))#
#caseBC <-list.files(getwd(),full.names = F, pattern="^[Best]")#
#caseWC <-list.files(getwd(),full.names = F, pattern="^[Worst]")#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
fileNamesNA
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 11, height = 4)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 2.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,-0.4))#
graphics.off()#
}#
}
#caseWC <-list.files(getwd(),full.names = F, pattern="^[Worst]")#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#
#setwd(originalDirectory)#
#setwd(file.path(originalDataFolder , "NoAttack"))#
#caseBC <-list.files(getwd(),full.names = F, pattern="^[Best]")#
#caseWC <-list.files(getwd(),full.names = F, pattern="^[Worst]")#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 11, height = 4)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,-0.4))#
graphics.off()#
}#
}
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#
#setwd(originalDirectory)#
#setwd(file.path(originalDataFolder , "NoAttack"))#
#caseBC <-list.files(getwd(),full.names = F, pattern="^[Best]")#
#caseWC <-list.files(getwd(),full.names = F, pattern="^[Worst]")#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 11, height = 4)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case, width = 10, height = 8 ))#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,-0.4))#
graphics.off()#
}#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 11, height = 4)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case, width = 10, height = 8 ))#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,-0.4))#
graphics.off()#
}#
}
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 11, height = 4)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case, width = 10, height = 8 )#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,-0.4))#
graphics.off()#
}#
}
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 11, height = 4)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case, width = 10, height = 8 )#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,-0.4))#
graphics.off()#
}#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
warnigs()
warnings()
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 11, height = 8)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case )#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,-0.4))#
graphics.off()#
}#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
par("usr")
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 11, height = 8)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,-0.8))#
graphics.off()#
}#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 11, height = 8)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,-0.2))#
graphics.off()#
}#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 11, height = 8)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
}
etwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
dataFileFolder
library("reader")#
dataFileFolder<-file.path(getwd(),"AvgDataSets")#
setwd(dataFileFolder)
dataFileFolder
names
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, "_reduced_",fileName), ".pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:6){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
for(j in 9:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
# for(j in 3:(ncol(myList[[i-2]])-1)){#
	# lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
# }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, ccase, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:6){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
for(j in 9:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
# for(j in 3:(ncol(myList[[i-2]])-1)){#
	# lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
# }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:6){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
for(j in 9:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
# for(j in 3:(ncol(myList[[i-2]])-1)){#
	# lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
# }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
print(names)#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
print(colnames(myList[[i-2]]))#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:5){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
for(j in 8:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
# for(j in 3:(ncol(myList[[i-2]])-1)){#
	# lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
# }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
for(s in c(1:5,8:19)){#
#for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}
c(1:5,8:19)
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
print(names)#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in c(1:5,8:19)){#
#for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
print(colnames(myList[[i-2]]))#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:5){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
for(j in 8:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
# for(j in 3:(ncol(myList[[i-2]])-1)){#
	# lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
# }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
print(names)#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in c(1:5,8:19)){#
#for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
print(colnames(myList[[i-2]]))#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:5){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
for(j in 8:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
# for(j in 3:(ncol(myList[[i-2]])-1)){#
	# lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
# }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
print(names)#
myList<-list()#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
for(s in c(1:4,7:19)){#
#for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
}#
max_y<-max(max_vector, na.rm=TRUE)#
print(colnames(myList[[i-2]]))#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
for(j in 3:5){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
for(j in 8:(ncol(myList[[i-2]])-1)){#
	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
}#
# for(j in 3:(ncol(myList[[i-2]])-1)){#
	# lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
# }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
average
avg()
average()
names(datasets
)
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-3))#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(myList[[i-2]][,s+1])#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i]<-meanVector#
#
print(colnames(myList[[i-2]]))#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
#for(j in 3:5){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
#for(j in 8:(ncol(myList[[i-2]])-1)){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
 for(j in 3:(ncol(myList[[i-2]])-1)){#
	 lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
 }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
p<-tableGrob(myTable, rows=NULL)#
grid.arrange(p)#
}
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-3))#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(myList[[i-2]][,s+1])#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i]<-meanVector#
#
print(colnames(myList[[i-2]]))#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
#for(j in 3:5){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
#for(j in 8:(ncol(myList[[i-2]])-1)){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
 for(j in 3:(ncol(myList[[i-2]])-1)){#
	 lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
 }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
p<-tableGrob(myTable, rows=NULL)#
grid.arrange(p)#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
fileFolder<-fileFolderA
case<-fileNamesA[1]
setwd(file.path(originalDataFolder, fileFolder)	)#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-3))#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(myList[[i-2]][,s+1])#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i]<-meanVector#
#
print(colnames(myList[[i-2]]))#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
#for(j in 3:5){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
#for(j in 8:(ncol(myList[[i-2]])-1)){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
 for(j in 3:(ncol(myList[[i-2]])-1)){#
	 lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
 }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
p<-tableGrob(myTable, rows=NULL)#
grid.arrange(p)#
}
setwd(originalDirectory)
setwd(file.path(originalDataFolder, fileFolder))
myFile<-list.files(getwd(),full.names = F, pattern= case)
no_col<-max(count.fields(myFile))
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-3))
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(myList[[i-2]][,s+1])#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i]<-meanVector#
#
print(colnames(myList[[i-2]]))#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
#for(j in 3:5){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
#for(j in 8:(ncol(myList[[i-2]])-1)){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
 for(j in 3:(ncol(myList[[i-2]])-1)){#
	 lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
 }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
p<-tableGrob(myTable, rows=NULL)#
grid.arrange(p)
library(gridExtra)
library(grid)
setwd(originalDirectory)
setwd(file.path(originalDataFolder, fileFolder))#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-3))
i=3
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(myList[[i-2]][,s+1])#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i]<-meanVector
meanVector
mean(myList[[i-2]][,s+1])
myList[[i-2]][,s+1]
meanVector[s]<-mean(as.numeric(as.vector(myList[[i-2]][,s+1])))
meanVector[s]
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(as.numeric(as.vector(myList[[i-2]][,s+1])))#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i]<-meanVector
myTable
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder))#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-3))#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(as.numeric(as.vector(myList[[i-2]][,s+1])))#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i]<-meanVector#
#
print(colnames(myList[[i-2]]))#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
#for(j in 3:5){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
#for(j in 8:(ncol(myList[[i-2]])-1)){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
 for(j in 3:(ncol(myList[[i-2]])-1)){#
	 lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
 }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
p<-tableGrob(myTable, rows=NULL)#
grid.arrange(p)#
}
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])
i
setwd(file.path(originalDataFolder, fileFolder))#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-3))#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(as.numeric(as.vector(myList[[i-2]][,s+1])))#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i]<-meanVector
myTable
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]
setwd(originalDirectory)
etwd(file.path(originalDataFolder, fileFolder))#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-3))#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]
setwd(originalDirectory)
setwd(file.path(originalDataFolder, fileFolder))#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-3))#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(as.numeric(as.vector(myList[[i-2]][,s+1])))#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i]<-meanVector
}
setwd(originalDirectory)
setwd(file.path(originalDataFolder, fileFolder))#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-3))
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]
i
myList[[i-2]]
myList[[3]]
datasets[i]
myList[[i-2]]
i=3
setwd(originalDirectory)
setwd(file.path(originalDataFolder, fileFolder))#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-3))
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(as.numeric(as.vector(myList[[i-2]][,s+1])))#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i]<-meanVector
myTable
numberOfVariables
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder))#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-3))#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(as.numeric(as.vector(myList[[i-2]][,s+1])))#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i-3]<-meanVector#
#
print(colnames(myList[[i-2]]))#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
#for(j in 3:5){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
#for(j in 8:(ncol(myList[[i-2]])-1)){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
 for(j in 3:(ncol(myList[[i-2]])-1)){#
	 lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
 }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
p<-tableGrob(myTable, rows=NULL)#
grid.arrange(p)#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
ggplot2::ggsave(paste(case,'.pdf', sep=""),g)
ggplot2::ggsave(paste(case,'.pdf', sep=""),p)
p<-tableGrob(myTable, rows=NULL)
grid.arrange(p)
ggplot2::ggsave(paste(case,'.pdf', sep=""),p)
ggplot2::ggsave(paste(getwd(),case,'.pdf', sep=""),p)
paste(getwd(),case,'.pdf', sep="")
setwd(originalDirectory)
setwd(file.path(originalDataFolder, fileFolder))
ggplot2::ggsave(paste(getwd(),case,'.pdf', sep=""),p)
paste(getwd(),case,'.pdf', sep="")
paste(file.path(analysisFolder, fileFolder, case, fileName),'.pdf', sep="")
originalDirectory
paste(file.path(originalDirectory ,analysisFolder, fileFolder, case, fileName),'.pdf', sep="")
paste(file.path(originalDirectory ,analysisFolder, fileFolder, case),'_table_.pdf', sep="")
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder))#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-3))#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(as.numeric(as.vector(myList[[i-2]][,s+1])))#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i-3]<-meanVector#
#
#print(colnames(myList[[i-2]]))#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
#for(j in 3:5){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
#for(j in 8:(ncol(myList[[i-2]])-1)){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
 for(j in 3:(ncol(myList[[i-2]])-1)){#
	 lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
 }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
p<-tableGrob(myTable, rows=NULL)#
grid.arrange(p)#
ggplot2::ggsave(paste(file.path(originalDirectory ,analysisFolder, fileFolder, case),'_table.pdf', sep=""),p)#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
col.names
col.names(
))
col.names()
colnames()
colnames(myTable)
numberOfVariables
names(datasets)
names
datasets[[2]]
datasets[[3]]
numberOfVariables
datasets[[3]]
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder))#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-2))#
colnames(myTable)<-names(datasets)[-c(1,2)]#
rownames(myTable)<-names#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(as.numeric(as.vector(myList[[i-2]][,s+1])))#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i-2]<-meanVector#
colnames(myTable)[i]<-fileName#
#print(colnames(myList[[i-2]]))#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
#for(j in 3:5){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
#for(j in 8:(ncol(myList[[i-2]])-1)){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
 for(j in 3:(ncol(myList[[i-2]])-1)){#
	 lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
 }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
p<-tableGrob(myTable, rows=NULL)#
grid.arrange(p)#
ggplot2::ggsave(paste(file.path(originalDirectory ,analysisFolder, fileFolder, case),'_table.pdf', sep=""),p)#
}
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])
P<-t(matrix(c(0.64, 0.32, 0.04, 0.32, 0.56, 0.12,0.16, 0.48, 0.36), ncol=3, nrow=3))
P2<-P%*%P
P0<-c(1/3,1/3,1/3)
p0*P2
P0%*%P2
P0*P2[1,3]
P0
P0%*%P2[1,3]
P2[1,3]%*%P0
P2[1,3]*P0
P2[1,3]
P2[1,]%*%P0
P2[1,]
P2[1,]*P0
P0
P2[1,]
P2[1,]*P0
P2[1,]%*%P0
P2<-P%*%P
P2
P2[1,]%*%P0
P0%*%P2[2,]
P<-t(matrix(c(0.64, 0.32, 0.04, 0.34, 0.56, 0.12,0.16, 0.48, 0.36), ncol=3, nrow=3))
P2<-P%*%P
P0<-c(1/3,1/3,1/3)
P0%*%P2[2,]
P2[2,]
P2
P0%*%P2[,2]
P<-t(matrix(c(0.64, 0.32, 0.04, 0.32, 0.56, 0.12,0.16, 0.48, 0.36), ncol=3, nrow=3))
P<-t(matrix(c(0.64, 0.32, 0.04, 0.32, 0.56, 0.12,0.16, 0.48, 0.36), ncol=3, nrow=3))
P0<-c(1/3,1/3,1/3)
P0%*%P2[,2]
P2[,2]
setwd("~/Research/Dropbox/OverleafGit/Microservices/SingleExperimentAnalysis/100Users")
getwd
getwd()
originalDirectory<-getwd()
folders<-list.files(path= originalDirectory)
folders
rm(list=ls())#
#
#change the wd if needed#
#setwd("~/Research/Dropbox/OverleafGit/Microservices/SingleExperimentAnalysis/100Users")#
setwd("~/Research/Dropbox/OverleafGit/Microservices/SingleExperimentAnalysis/200Users")#
originalDirectory<-getwd()#
folders<-list.files(path= originalDirectory)#
#
#set up the folders for saving the output#
originalDataFolder<-subset(folders, folders=="OriginalData" )#
setwd(file.path(originalDataFolder , "Attack"))#
fileNamesA<-str_remove(list.files(getwd(),full.names = F ), ".txt")#
#
se
setwd(originalDirectory)#
setwd(file.path(originalDataFolder , "NoAttack"))#
fileNamesNA<-str_remove(list.files(getwd(),full.names = F ), ".txt")#
analysisFolder<-subset(folders, folders=="Analysis" )#
setwd(originalDirectory)#
setwd(file.path(analysisFolder,"NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)#
setwd(originalDirectory)#
setwd(file.path(analysisFolder,"Attack"))#
dir.create(fileNamesA[1], showWarnings=F)#
dir.create(fileNamesA[2], showWarnings=F)#
setwd(originalDirectory)#
datasetsFolder<-subset(folders, folders=="Datasets" )#
setwd(file.path(datasetsFolder,"NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)#
setwd(originalDirectory)#
setwd(file.path(datasetsFolder,"Attack"))#
dir.create(fileNamesA[1], showWarnings=F)#
dir.create(fileNamesA[2], showWarnings=F)#
setwd(originalDirectory)#
#
#with no attack. Uncomment the line  for the different case (Attack or no Attack) #
fileFolderNA<-"NoAttack" #
fileFolderA<-"Attack"#
#
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])#
#No attack#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderNA,  fileNamesNA[2])#
#
#change the method to include or exclude the to microservices#
performAnalysis<-function(fileFolder, case){#
#
setwd(file.path(originalDataFolder, fileFolder))#
myFile<-list.files(getwd(),full.names = F, pattern= case)#
no_col<-max(count.fields(myFile))#
dataset<- read.delim(myFile, header=F, sep = "", col.names=c(1:no_col))#
#
#Split the original Benchflow dataset into subsets, each for one measurement#
t<-"Section:"#
factors<-which(dataset[,1]==t)#
datasets <-split(dataset, cumsum(1:nrow(dataset) %in% factors))#
numberOfVariables<-length(names(datasets)) #
#
#Variables names. Time and microservices.#
names<-as.character(unlist(as.data.frame(datasets[3])[3,]))[-2]#
#print(names)#
myList<-list()#
myTable<-matrix(nrow=length(names)-1,ncol=(numberOfVariables-2))#
colnames(myTable)<-names(datasets)[-c(1,2)]#
rownames(myTable)<-names#
for(i in 3:numberOfVariables){#
#Data pre-process	#
myList[[i-2]]<-as.data.frame(datasets[i])	#
colnames(myList[[i-2]])<-names#
# The name of he file is compounded by the values of the first row.#
fileName<-paste(gsub("[[:punct:]]", "", str_squish(paste(as.character(unlist(myList[[i-2]][1,-1])),collapse=""))), sep="")#
#Paths to Datasets and Analyis folders#
measurefilePath<-paste(file.path(originalDirectory, datasetsFolder, fileFolder,case, fileName), ".csv", sep="")#
plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), ".pdf", sep="")#
#plot without getCArd and Login#
#plotFilePath<-paste(file.path(originalDirectory, analysisFolder, fileFolder, case, fileName), "_reduced_.pdf", sep="")#
#Save a dataset, each for one measure#
myList[[i-2]]<-myList[[i-2]][-c(1:4),]#
myList[[i-2]]<-myList[[i-2]][!apply(myList[[i-2]] == "", 1, all),]#
write.csv(myList[[i-2]],file= measurefilePath)#
#
#Plot time series, each for one microservice#
pdf(plotFilePath, width = 12, height = 6)#
max_x<-max(as.numeric(as.vector(myList[[i-2]]$Time)), na.rm=TRUE)#
max_vector<-c()#
meanVector<-c()#
#for(s in c(1:4,7:19)){#
for(s in 1:(length(names)-1)){#
max_temp<-max(as.numeric(as.vector(myList[[i-2]][,s+1])), na.rm=TRUE)#
max_vector[s]<-max_temp#
meanVector[s]<-mean(as.numeric(as.vector(myList[[i-2]][,s+1])))#
}#
max_y<-max(max_vector, na.rm=TRUE)#
myTable[,i-2]<-meanVector#
colnames(myTable)[i]<-fileName#
#print(colnames(myList[[i-2]]))#
col<-rainbow(19)#
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)#
plot(as.numeric(as.vector(myList[[i-2]]$Time)),as.numeric(as.vector(myList[[i-2]][,2])), type="l", cex = 0.5, col=col[1], pch = "*", xlim=c(0,max_x+max_x/100), ylim=c(0,max_y+max_y/100), xlab="time", ylab=fileName, main=case)#
abline(v=180, col="grey")#
v<-180+1200#
abline(v=v, col="blue")#
#for(j in 3:5){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
#for(j in 8:(ncol(myList[[i-2]])-1)){#
#	lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
#}#
 for(j in 3:(ncol(myList[[i-2]])-1)){#
	 lines(as.vector(myList[[i-2]]$Time),as.numeric(as.vector(myList[[i-2]][,j])), col=col[j-1], cex = 0.5, type="l")#
 }#
legend('topright', names[-1], col=col, pch=21, inset=c(-0.2,0))#
graphics.off()#
}#
p<-tableGrob(myTable, rows=NULL)#
grid.arrange(p)#
ggplot2::ggsave(paste(file.path(originalDirectory ,analysisFolder, fileFolder, case),'_table.pdf', sep=""),p)#
}
setwd(originalDirectory)#
setwd(file.path(originalDataFolder , "NoAttack"))#
fileNamesNA<-str_remove(list.files(getwd(),full.names = F ), ".txt")#
analysisFolder<-subset(folders, folders=="Analysis" )#
setwd(originalDirectory)#
setwd(file.path(analysisFolder,"NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)#
setwd(originalDirectory)#
setwd(file.path(analysisFolder,"Attack"))#
dir.create(fileNamesA[1], showWarnings=F)#
dir.create(fileNamesA[2], showWarnings=F)#
setwd(originalDirectory)#
datasetsFolder<-subset(folders, folders=="Datasets" )#
setwd(file.path(datasetsFolder,"NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)#
setwd(originalDirectory)#
setwd(file.path(datasetsFolder,"Attack"))#
dir.create(fileNamesA[1], showWarnings=F)#
dir.create(fileNamesA[2], showWarnings=F)#
setwd(originalDirectory)
setwd(originalDirectory)
setwd(file.path(originalDataFolder , "NoAttack"))
setwd(originalDirectory)
setwd(file.path(originalDataFolder , "NoAttack"))
originalDataFolder
getwd()
fileNamesNA<-str_remove(list.files(getwd(),full.names = F ), ".txt")
fileNamesNA
analysisFolder<-subset(folders, folders=="Analysis" )
folders
setwd("~/Research/Dropbox/OverleafGit/Microservices/SingleExperimentAnalysis/200Users")#
originalDirectory<-getwd()#
folders<-list.files(path= originalDirectory)#
#
#set up the folders for saving the output#
originalDataFolder<-subset(folders, folders=="OriginalData" )#
setwd(file.path(originalDataFolder , "Attack"))#
fileNamesA<-str_remove(list.files(getwd(),full.names = F ), ".txt")#
#
setwd(originalDirectory)#
setwd(file.path(originalDataFolder , "NoAttack"))#
fileNamesNA<-str_remove(list.files(getwd(),full.names = F ), ".txt")#
analysisFolder<-subset(folders, folders=="Analysis" )#
setwd(originalDirectory)#
setwd(file.path(analysisFolder,"NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)#
setwd(originalDirectory)#
setwd(file.path(analysisFolder,"Attack"))#
dir.create(fileNamesA[1], showWarnings=F)#
dir.create(fileNamesA[2], showWarnings=F)#
setwd(originalDirectory)#
datasetsFolder<-subset(folders, folders=="Datasets" )#
setwd(file.path(datasetsFolder,"NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)#
setwd(originalDirectory)#
setwd(file.path(datasetsFolder,"Attack"))#
dir.create(fileNamesA[1], showWarnings=F)#
dir.create(fileNamesA[2], showWarnings=F)#
setwd(originalDirectory)
fileNamesA
originalDataFolder
fileNamesNA
analysisFolder<-subset(folders, folders=="Analysis" )
analysisFolder
setwd(originalDirectory)
setwd(file.path(analysisFolder,"NoAttack"))
file.path(analysisFolder,"NoAttack")
GETWD()
getwd()
originalDataFolder
setwd(file.path(originalDataFolder , "NoAttack"))
getwd()
fileNamesNA<-str_remove(list.files(getwd(),full.names = F ), ".txt")#
analysisFolder<-subset(folders, folders=="Analysis" )
analysisFolder
getwd()
originalDirectory
setwd(file.path(analysisFolder,"NoAttack"))
file.path(analysisFolder,"NoAttack")
fileNamesNA
setwd(file.path(originalDirectory,analysisFolder))
getwd()
dir.create(file.path("NoAttack"))
dir.create(file.path("Attack"))
dir.create(file.path("Attack"))
dir.create(file.path("NoAttack"),showWarnings=F)
dir.create(file.path("NoAttack"),showWarnings=F)#
dir.create(file.path("Attack"),showWarnings=F)#
setwd(file.path(analysisFolder,"NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)#
setwd(originalDirectory)#
setwd(file.path(analysisFolder,"Attack"))#
dir.create(fileNamesA[1], showWarnings=F)#
dir.create(fileNamesA[2], showWarnings=F)#
setwd(originalDirectory)#
datasetsFolder<-subset(folders, folders=="Datasets" )#
dir.create(file.path("NoAttack"),showWarnings=F)#
dir.create(file.path("Attack"),showWarnings=F)#
setwd(file.path(originalDirectory, datasetsFolder))#
setwd(file.path(datasetsFolder,"NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)#
setwd(originalDirectory)#
setwd(file.path(datasetsFolder,"Attack"))#
dir.create(fileNamesA[1], showWarnings=F)#
dir.create(fileNamesA[2], showWarnings=F)#
setwd(originalDirectory)
originalDirectory
originalDataFolder<-subset(folders, folders=="OriginalData" )#
setwd(file.path(originalDataFolder , "Attack"))#
fileNamesA<-str_remove(list.files(getwd(),full.names = F ), ".txt")
setwd(originalDirectory)#
setwd(file.path(originalDataFolder , "NoAttack"))#
fileNamesNA<-str_remove(list.files(getwd(),full.names = F ), ".txt")#
analysisFolder<-subset(folders, folders=="Analysis" )#
setwd(file.path(originalDirectory,analysisFolder))#
dir.create(file.path("NoAttack"),showWarnings=F)#
dir.create(file.path("Attack"),showWarnings=F)#
setwd(file.path(analysisFolder,"NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)
getwd()
setwd(originalDirectory)#
setwd(file.path(originalDataFolder , "NoAttack"))#
fileNamesNA<-str_remove(list.files(getwd(),full.names = F ), ".txt")#
analysisFolder<-subset(folders, folders=="Analysis" )#
setwd(file.path(originalDirectory,analysisFolder))#
dir.create(file.path("NoAttack"),showWarnings=F)#
dir.create(file.path("Attack"),showWarnings=F)#
setwd(file.path(analysisFolder,"NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)
setwd(originalDirectory)#
setwd(file.path(originalDataFolder , "NoAttack"))#
fileNamesNA<-str_remove(list.files(getwd(),full.names = F ), ".txt")#
analysisFolder<-subset(folders, folders=="Analysis" )#
setwd(file.path(originalDirectory,analysisFolder))#
dir.create(file.path("NoAttack"),showWarnings=F)#
dir.create(file.path("Attack"),showWarnings=F)#
setwd(file.path("NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)
originalDirectory
setwd(file.path(analysisFolder,"Attack"))
analysisFolder
setwd(file.path(originalDirectory,analysisFolder))
setwd(file.path("Attack"))
dir.create(fileNamesA[1], showWarnings=F)#
dir.create(fileNamesA[2], showWarnings=F)
datasetsFolder<-subset(folders, folders=="Datasets" )
dir.create(file.path("NoAttack"),showWarnings=F)
dir.create(file.path("Attack"),showWarnings=F)
setwd(originalDirectory)
datasetsFolder<-subset(folders, folders=="Datasets" )
datasetsFolder
datasetsFolder<-subset(folders, folders=="Datasets" )#
setwd(file.path(originalDirectory, datasetsFolder))#
dir.create(file.path("NoAttack"),showWarnings=F)#
dir.create(file.path("Attack"),showWarnings=F)#
setwd(file.path(originalDirectory, datasetsFolder))#
setwd(file.path(datasetsFolder,"NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)
setwd(file.path(originalDirectory, datasetsFolder))#
setwd(file.path("NoAttack"))#
dir.create(fileNamesNA[1], showWarnings=F)#
dir.create(fileNamesNA[2], showWarnings=F)#
setwd(file.path(originalDirectory, datasetsFolder))#
setwd(file.path("Attack"))#
dir.create(fileNamesA[1], showWarnings=F)#
dir.create(fileNamesA[2], showWarnings=F)
setwd(originalDirectory)
fileFolderNA<-"NoAttack" #
fileFolderA<-"Attack"#
#
getwd()#
#
#Select the original dataset for the best or worst configuration#
#Attack#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[1])#
setwd(originalDirectory)#
performAnalysis(fileFolderA, fileNamesA[2])
fileFolderA
fileNamesA
